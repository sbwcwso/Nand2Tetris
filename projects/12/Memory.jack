// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/12/Memory.jack

/**
 * This library provides two services: direct access to the computer's main
 * memory (RAM), and allocation and recycling of memory blocks. The Hack RAM
 * consists of 32,768 words, each holding a 16-bit binary number.
 */ 
class Memory {

    static Array ram;
    static Array heap;

    /** Initializes the class. */
    function void init() {
        let ram = 0;
        let heap = 2048;         // heapBase
        let heap[0] = 0;        // next
        let heap[1] = 14334;    // length
        return;
    }

    /** Returns the RAM value at the given address. */
    function int peek(int address) {
        return ram[address];
    }

    /** Sets the RAM value at the given address to the given value. */
    function void poke(int address, int value) {
        let ram[address] = value;
        return;
    }

    /** Finds an available RAM block of the given size and returns
     *  a reference to its base address. */
    function int alloc(int size) {
        var Array pr;
        var int targetSize;

        let pr = heap;
        let targetSize = size + 1;
        // First-fit heuristics
        while(~(pr = null)) {
            if (pr[1] > targetSize) {  // The required block can be split from this segment
                let pr[1] = pr[1] - (size + 2);
                let pr = pr + pr[1] + 2;
                let pr[0] = null;
                let pr[1] = size;
                return pr + 2;
            }
            let pr = pr[0];
        }
        return null;
    }

    /** De-allocates the given object (cast as an array) by making
     *  it available for future allocations. */
    function void deAlloc(Array o) {
        var Array block;
        var Array pr;
        let block = o - 2;
        let pr = heap;
        while(true) {
            if (pr[0] = null) {
                let pr[0] = block;
                return;
            }
            let pr = pr[0];
        }
        return;
    }    
}
