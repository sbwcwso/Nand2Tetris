// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/12/Keyboard.jack

/**
 * A library for handling user input from the keyboard.
 */
class Keyboard {
    static int keyboardMemoryMap;
    
    /** Initializes the keyboard. */
    function void init() {
        let keyboardMemoryMap = 24576;
        return;
    } 

    /**
     * Returns the character of the currently pressed key on the keyboard;
     * if no key is currently pressed, returns 0.
     *
     * Recognizes all ASCII characters, as well as the following keys:
     * new line = 128 = String.newline()
     * backspace = 129 = String.backSpace()
     * left arrow = 130
     * up arrow = 131
     * right arrow = 132
     * down arrow = 133
     * home = 134
     * End = 135
     * page up = 136
     * page down = 137
     * insert = 138
     * delete = 139
     * ESC = 140
     * F1 - F12 = 141 - 152
     */
    function char keyPressed() {
        return Memory.peek(keyboardMemoryMap);
    }

    /**								
     * Waits until a key is pressed on the keyboard and released,
     * then echoes the key to the screen, and returns the character 
     * of the pressed key.
     */
    function char readChar() {
        var char c, isReleased;

        // wait until a key is pressed
        do Output.printChar(0);
        let c = Keyboard.keyPressed();
        while (c = 0) {
            let c = Keyboard.keyPressed();
        }

        // wait unit a key is released
        let isReleased = Keyboard.keyPressed();
        while (~(isReleased = 0)) {
            let isReleased = Keyboard.keyPressed();
        }
        
        do Output.backSpace();
        do Output.printChar(c);
        return c;
    }

    /**								
     * Displays the message on the screen, reads from the keyboard the entered
     * text until a newline character is detected, echoes the text to the screen,
     * and returns its value. Also handles user backspaces.
     */
    function String readLine(String message) {
        var String str;
        var char c;

        do Output.printString(message);
        let str = String.new(80);  // TODO Need to handle overflow.
        while (true) {
            let c = Keyboard.readChar();
            if (c = String.newLine()) {
                // do Output.println();  // already output newLine in readChar
                return str;
            }

            if (c = String.backSpace()) {
                do str.eraseLastChar();
                // do Output.backSpace();  // already ouput backSpace in readChar
            } else {
                do str.appendChar(c);
            }
        }

        return str;
    }   

    /**								
     * Displays the message on the screen, reads from the keyboard the entered
     * text until a newline character is detected, echoes the text to the screen,
     * and returns its integer value (until the first non-digit character in the
     * entered text is detected). Also handles user backspaces. 
     */
    function int readInt(String message) {
        var String str;

        do Output.printString(message);
        let str = Keyboard.readLine("");
        return str.intValue();
    }
}
