function CalcUnit.new 0
push constant 4
call Memory.alloc 1
pop pointer 0
push argument 0
push constant 3
sub
pop this 0
push constant 0
pop this 1
push constant 0
pop this 2
push constant 0
pop this 3
push pointer 0
return
function CalcUnit.addOperand 0
push argument 0
pop pointer 0
push this 1
push constant 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push argument 1
push constant 0
call List.new 2
pop this 1
push this 1
pop this 2
goto IF_END0
label IF_FALSE0
push this 2
push argument 1
push constant 0
call List.new 2
call List.setNext 2
pop temp 0
push this 2
call List.getNext 1
pop this 2
label IF_END0
push constant 0
return
function CalcUnit.applyAdd 2
push argument 0
pop pointer 0
push constant 0
pop local 0
push this 1
pop local 1
label WHILE_EXP0
push local 1
push constant 0
eq
not
not
if-goto WHILE_END0
push local 0
push local 1
call List.getData 1
add
pop local 0
push local 1
call List.getNext 1
pop local 1
goto WHILE_EXP0
label WHILE_END0
push local 0
return
function CalcUnit.applySub 2
push argument 0
pop pointer 0
push this 1
push constant 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 1
call Sys.error 1
pop temp 0
label IF_FALSE0
push this 1
call List.getNext 1
push constant 0
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push this 1
call List.getData 1
neg
pop local 0
goto IF_END1
label IF_FALSE1
push this 1
call List.getData 1
pop local 0
push this 1
call List.getNext 1
pop local 1
label WHILE_EXP0
push local 1
push constant 0
eq
not
not
if-goto WHILE_END0
push local 0
push local 1
call List.getData 1
sub
pop local 0
push local 1
call List.getNext 1
pop local 1
goto WHILE_EXP0
label WHILE_END0
label IF_END1
push local 0
return
function CalcUnit.applyMul 2
push argument 0
pop pointer 0
push constant 1
pop local 0
push this 1
pop local 1
label WHILE_EXP0
push local 1
push constant 0
eq
not
not
if-goto WHILE_END0
push local 0
push local 1
call List.getData 1
call Math.multiply 2
pop local 0
push local 1
call List.getNext 1
pop local 1
goto WHILE_EXP0
label WHILE_END0
push local 0
return
function CalcUnit.applyDiv 2
push argument 0
pop pointer 0
push this 1
push constant 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 1
call Sys.error 1
pop temp 0
label IF_FALSE0
push this 1
call List.getNext 1
push constant 0
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 1
push this 1
call List.getData 1
call Math.divide 2
pop local 0
goto IF_END1
label IF_FALSE1
push this 1
call List.getData 1
pop local 0
push this 1
call List.getNext 1
pop local 1
label WHILE_EXP0
push local 1
push constant 0
eq
not
not
if-goto WHILE_END0
push local 0
push local 1
call List.getData 1
call Math.divide 2
pop local 0
push local 1
call List.getNext 1
pop local 1
goto WHILE_EXP0
label WHILE_END0
label IF_END1
push local 0
return
function CalcUnit.apply 1
push argument 0
pop pointer 0
push this 0
push constant 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push pointer 0
call CalcUnit.applyAdd 1
pop local 0
label IF_FALSE0
push this 0
push constant 1
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push pointer 0
call CalcUnit.applySub 1
pop local 0
label IF_FALSE1
push this 0
push constant 2
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push pointer 0
call CalcUnit.applyMul 1
pop local 0
label IF_FALSE2
push this 0
push constant 3
eq
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push pointer 0
call CalcUnit.applyDiv 1
pop local 0
label IF_FALSE3
push constant 0
not
pop this 3
push local 0
return
function CalcUnit.isCalculated 0
push argument 0
pop pointer 0
push this 3
return
function CalcUnit.dispose 0
push argument 0
pop pointer 0
push this 1
push constant 0
eq
not
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 1
call List.dispose 1
pop temp 0
label IF_FALSE0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
